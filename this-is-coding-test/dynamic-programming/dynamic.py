# 다이나믹 프로그래밍: 연산속도 & 메모리공간을 최대한으로 활용할 수 있게끔 해주는 효율 알고리즘
# 다음 조건이 만족될 때, 다이나믹 프로그래밍을 사용할 수 있다.
# 1. 큰 문제를 작은 문제로 나눌 수 있다.
# 2. 작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 동일하다.


# 문제 1
# 정수 X 가 주어질 때 정수 X 에 사용할 수 있는 연산은 다음과 같이 4 가지이다.
# 1) X 가 5 로 나누어 떨어지면 5 로 나눈다.
# 2) X 가 3 으로 나누어 떨어지면 3 으로 나눈다.
# 3) X 가 2 로 나누어 떨어지면 2 로 나눈다.
# 4) X 에서 1 을 뺀다.
# 정수 X 가 주어졌을 때 연산 4 개를 적절히 사용해서 1 을 만들어야 한다.

def prob1():
    x = int(input())
    d = [0] * 30001  # 입력 값 범위
    for i in range(2, x+1):
        d[i] = d[i-1] + 1
        if i % 2 == 0:
            d[i] = min(d[i], d[i//2] + 1)
        if i % 3 == 0:
            d[i] = min(d[i], d[i//3] + 1)
        if i % 5 == 0:
            d[i] = min(d[i], d[i//5] + 1)


# 문제 2
# 개미전사는 부족한 식량을 충당하고자 메뚜기 마을의 식량창고를 몰래 공격하려고 한다. 메뚜기 마을에는 여러 개의
# 식량창고가 있는데 식량창고는 일직선으로 이어져 있다. 각 식량창고에는 정해진 수의 식량을 저장하고 있으며 개미전사는
# 식량 창고를 선택적으로 약탈하여 식량을 빼앗을 예정이다. 이 때 메뚜기 정찰병들은 일직선 상에 존재하는 식량창고 중에서 서로
# 인접한 식량창고가 공격받으면 바로 알아챌 수 있다. 따라서 개미전사가 정찰병에게 들키지 않고 식량창고를 약탈하기
# 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다.
# 개미전사를 위해 식량창고 N 개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최대값을 구하는 프로그램을 작성하시오.

def prob2():
    n = int(input())
    array = list(map(int, input().split()))
    d = [0] * 100
    d[0] = array[0]
    d[1] = max(array[0], array[1])
    for i in range(2, n):
        d[i] = max(d[i-1], d[i-2] + array[i])
    print(d[n-1])